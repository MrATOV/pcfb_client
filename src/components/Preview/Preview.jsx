import styles from './Preview.module.css';
import { useNavigate } from "react-router-dom";
import { motion } from "framer-motion";
import { useEffect, useState } from "react";
import MatrixRain from './MatrixRain';

import onlineCoursesImage from '/src/assets/preview/online-courses.png';
import materialsImage from '/src/assets/preview/materials.png';
import ideImage from '/src/assets/preview/ide.png';
import testImage from '/src/assets/preview/test.png';

const Preview = () => {
    const navigate = useNavigate();
    const [loaded, setLoaded] = useState(false);
    const [expandedItem, setExpandedItem] = useState(null);
    
    useEffect(() => {
        setLoaded(true);
    }, []);

    const containerVariants = {
        hidden: { opacity: 0 },
        visible: {
            opacity: 1,
            transition: {
                staggerChildren: 0.2,
                delayChildren: 0.3
            }
        }
    };

    const itemVariants = {
        hidden: { y: 20, opacity: 0 },
        visible: {
            y: 0,
            opacity: 1,
            transition: { duration: 0.5 }
        }
    };

    const featureItems = [
        {
            id: 1,
            icon: "üìö",
            title: "–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã",
            description: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã –ø–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º —Å –ø–æ—à–∞–≥–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞.",
            image: onlineCoursesImage
        },
        {
            id: 2,
            icon: "üìñ",
            title: "–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
            description: "–ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –≤—Å–µ–º –∞—Å–ø–µ–∫—Ç–∞–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
            image: materialsImage
        },
        {
            id: 3,
            icon: "üíª",
            title: "–°—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
            description: "–ù–∞–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π.",
            image: ideImage
        },
        {
            id: 4,
            icon: "‚ö°",
            title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π",
            description: "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º.",
            image: testImage
        }
    ];

    return (
        <div className={styles.container}>
            <MatrixRain className={styles.background} />
            <motion.div 
                className={styles.mainContent}
                initial="hidden"
                animate={loaded ? "visible" : "hidden"}
                variants={containerVariants}
            >
                <motion.h2 variants={itemVariants}>
                    –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è <span>–¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö</span>
                </motion.h2>
                
                <motion.p variants={itemVariants}>
                    –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö, 
                    –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ. 
                    –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è 
                    —ç—Ç–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.
                </motion.p>
                
                <motion.h3 variants={itemVariants}>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</motion.h3>
                
                <motion.ul variants={itemVariants} className={styles.featuresList}>
                    {featureItems.map((item) => (
                        <motion.li 
                            key={item.id}
                            className={`${styles.featureItem} ${expandedItem === item.id ? styles.expanded : ''}`}
                            onMouseEnter={() => setExpandedItem(item.id)}
                            onMouseLeave={() => setExpandedItem(null)}
                            initial="collapsed"
                            animate={expandedItem === item.id ? "expanded" : "collapsed"}
                            variants={{
                                collapsed: { 
                                    scale: 1,
                                    background: "var(--background)"
                                },
                                expanded: { 
                                    scale: 1.05,
                                    background: "var(--background)"
                                }
                            }}
                            transition={{ type: "spring", stiffness: 300 }}
                        >
                            <div className={styles.featureHeader}>
                                <span className={styles.featureIcon}>{item.icon}</span>
                                <span className={styles.featureTitle}>{item.title}</span>
                            </div>
                            
                            {expandedItem === item.id && (
                                <motion.div 
                                    className={styles.featureContent}
                                    initial="collapsed"
                                    animate="expanded"
                                    variants={{
                                        collapsed: { opacity: 0, height: 0 },
                                        expanded: { opacity: 1, height: "auto" }
                                    }}
                                    transition={{ duration: 0.3 }}
                                >
                                    <div className={styles.featureDescription}>
                                        {item.description}
                                    </div>
                                    <div className={styles.featureImageContainer}>
                                        <img 
                                            src={item.image} 
                                            alt={item.title} 
                                            className={styles.featureImage}
                                        />
                                    </div>
                                </motion.div>
                            )}
                        </motion.li>
                    ))}
                </motion.ul>
                
                <motion.button 
                    onClick={() => navigate("/register")} 
                    className={styles.ctaButton}
                    variants={itemVariants}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                >
                    –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                </motion.button>
            </motion.div>
        </div>
    )
};

export default Preview;